// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicPrepDemo.Context;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MusicPrepDemo.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230511093005_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MusicPrepDemo.Models.Afspeellijst", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Afspeellijsten");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Naam = "Rock Classics"
                        },
                        new
                        {
                            Id = 2,
                            Naam = "Electronic Hits"
                        },
                        new
                        {
                            Id = 3,
                            Naam = "Hip Hop Gems"
                        });
                });

            modelBuilder.Entity("MusicPrepDemo.Models.AfspeellijstNummer", b =>
                {
                    b.Property<int>("NummerId")
                        .HasColumnType("integer");

                    b.Property<int>("AfspeellijstId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.HasKey("NummerId", "AfspeellijstId");

                    b.HasIndex("AfspeellijstId");

                    b.ToTable("AfspeellijstNummers");

                    b.HasData(
                        new
                        {
                            NummerId = 1,
                            AfspeellijstId = 1,
                            Id = 0
                        },
                        new
                        {
                            NummerId = 3,
                            AfspeellijstId = 1,
                            Id = 0
                        },
                        new
                        {
                            NummerId = 5,
                            AfspeellijstId = 1,
                            Id = 0
                        },
                        new
                        {
                            NummerId = 7,
                            AfspeellijstId = 1,
                            Id = 0
                        },
                        new
                        {
                            NummerId = 2,
                            AfspeellijstId = 2,
                            Id = 0
                        },
                        new
                        {
                            NummerId = 4,
                            AfspeellijstId = 2,
                            Id = 0
                        },
                        new
                        {
                            NummerId = 6,
                            AfspeellijstId = 2,
                            Id = 0
                        },
                        new
                        {
                            NummerId = 8,
                            AfspeellijstId = 2,
                            Id = 0
                        },
                        new
                        {
                            NummerId = 9,
                            AfspeellijstId = 3,
                            Id = 0
                        },
                        new
                        {
                            NummerId = 11,
                            AfspeellijstId = 3,
                            Id = 0
                        },
                        new
                        {
                            NummerId = 12,
                            AfspeellijstId = 3,
                            Id = 0
                        });
                });

            modelBuilder.Entity("MusicPrepDemo.Models.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AlbumCoverId")
                        .HasColumnType("integer");

                    b.Property<int>("ArtiestId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ReleaseDatum")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ArtiestId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlbumCoverId = 1,
                            ArtiestId = 1,
                            ReleaseDatum = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Titel = "Abbey Road"
                        },
                        new
                        {
                            Id = 2,
                            AlbumCoverId = 2,
                            ArtiestId = 1,
                            ReleaseDatum = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Titel = "Resolver"
                        },
                        new
                        {
                            Id = 3,
                            AlbumCoverId = 3,
                            ArtiestId = 2,
                            ReleaseDatum = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Titel = "Cheese"
                        },
                        new
                        {
                            Id = 4,
                            AlbumCoverId = 4,
                            ArtiestId = 2,
                            ReleaseDatum = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Titel = "Multitude"
                        },
                        new
                        {
                            Id = 5,
                            AlbumCoverId = 5,
                            ArtiestId = 3,
                            ReleaseDatum = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Titel = "Sonata's"
                        },
                        new
                        {
                            Id = 6,
                            AlbumCoverId = 6,
                            ArtiestId = 3,
                            ReleaseDatum = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Titel = "Flute's"
                        });
                });

            modelBuilder.Entity("MusicPrepDemo.Models.AlbumCover", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Afbeelding")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("AlbumId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId")
                        .IsUnique();

                    b.ToTable("AlbumCovers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Afbeelding = "https://media.istockphoto.com/id/179250103/photo/live-music-background.jpg",
                            AlbumId = 1
                        },
                        new
                        {
                            Id = 2,
                            Afbeelding = "https://media.istockphoto.com/id/179250103/photo/live-music-background.jpg",
                            AlbumId = 2
                        },
                        new
                        {
                            Id = 3,
                            Afbeelding = "https://media.istockphoto.com/id/179250103/photo/live-music-background.jpg",
                            AlbumId = 3
                        },
                        new
                        {
                            Id = 4,
                            Afbeelding = "https://media.istockphoto.com/id/179250103/photo/live-music-background.jpg",
                            AlbumId = 4
                        },
                        new
                        {
                            Id = 5,
                            Afbeelding = "https://media.istockphoto.com/id/179250103/photo/live-music-background.jpg",
                            AlbumId = 5
                        },
                        new
                        {
                            Id = 6,
                            Afbeelding = "https://media.istockphoto.com/id/179250103/photo/live-music-background.jpg",
                            AlbumId = 6
                        });
                });

            modelBuilder.Entity("MusicPrepDemo.Models.Artiest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Geboortedatum")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Land")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Artiesten");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Geboortedatum = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Land = "UK",
                            Naam = "The Beatles"
                        },
                        new
                        {
                            Id = 2,
                            Geboortedatum = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Land = "FR",
                            Naam = "Stromae"
                        },
                        new
                        {
                            Id = 3,
                            Geboortedatum = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Land = "AU",
                            Naam = "Bach"
                        });
                });

            modelBuilder.Entity("MusicPrepDemo.Models.Nummer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AlbumId")
                        .HasColumnType("integer");

                    b.Property<int>("Lengte")
                        .HasColumnType("integer");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.ToTable("Nummers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlbumId = 1,
                            Lengte = 259,
                            Titel = "Come Together"
                        },
                        new
                        {
                            Id = 2,
                            AlbumId = 1,
                            Lengte = 183,
                            Titel = "Something"
                        },
                        new
                        {
                            Id = 3,
                            AlbumId = 2,
                            Lengte = 163,
                            Titel = "Back in the USSR"
                        },
                        new
                        {
                            Id = 4,
                            AlbumId = 2,
                            Lengte = 254,
                            Titel = "Dear Prudence"
                        },
                        new
                        {
                            Id = 5,
                            AlbumId = 3,
                            Lengte = 220,
                            Titel = "Alors on danse"
                        },
                        new
                        {
                            Id = 6,
                            AlbumId = 3,
                            Lengte = 228,
                            Titel = "Te Quiero"
                        },
                        new
                        {
                            Id = 7,
                            AlbumId = 4,
                            Lengte = 213,
                            Titel = "Meltdown"
                        },
                        new
                        {
                            Id = 8,
                            AlbumId = 4,
                            Lengte = 229,
                            Titel = "Papaoutai"
                        },
                        new
                        {
                            Id = 9,
                            AlbumId = 5,
                            Lengte = 287,
                            Titel = "Sonata No. 1 in G minor"
                        },
                        new
                        {
                            Id = 10,
                            AlbumId = 5,
                            Lengte = 285,
                            Titel = "Sonata No. 2 in A major"
                        },
                        new
                        {
                            Id = 11,
                            AlbumId = 6,
                            Lengte = 345,
                            Titel = "Flute Sonata in E-flat major"
                        },
                        new
                        {
                            Id = 12,
                            AlbumId = 6,
                            Lengte = 208,
                            Titel = "Flute Sonata in C major"
                        });
                });

            modelBuilder.Entity("MusicPrepDemo.Models.AfspeellijstNummer", b =>
                {
                    b.HasOne("MusicPrepDemo.Models.Afspeellijst", "Afspeellijst")
                        .WithMany("Nummers")
                        .HasForeignKey("AfspeellijstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicPrepDemo.Models.Nummer", "Nummer")
                        .WithMany("Lijsten")
                        .HasForeignKey("NummerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Afspeellijst");

                    b.Navigation("Nummer");
                });

            modelBuilder.Entity("MusicPrepDemo.Models.Album", b =>
                {
                    b.HasOne("MusicPrepDemo.Models.Artiest", "Artiest")
                        .WithMany("Albums")
                        .HasForeignKey("ArtiestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artiest");
                });

            modelBuilder.Entity("MusicPrepDemo.Models.AlbumCover", b =>
                {
                    b.HasOne("MusicPrepDemo.Models.Album", "Album")
                        .WithOne("AlbumCover")
                        .HasForeignKey("MusicPrepDemo.Models.AlbumCover", "AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");
                });

            modelBuilder.Entity("MusicPrepDemo.Models.Nummer", b =>
                {
                    b.HasOne("MusicPrepDemo.Models.Album", "Album")
                        .WithMany("Nummers")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");
                });

            modelBuilder.Entity("MusicPrepDemo.Models.Afspeellijst", b =>
                {
                    b.Navigation("Nummers");
                });

            modelBuilder.Entity("MusicPrepDemo.Models.Album", b =>
                {
                    b.Navigation("AlbumCover")
                        .IsRequired();

                    b.Navigation("Nummers");
                });

            modelBuilder.Entity("MusicPrepDemo.Models.Artiest", b =>
                {
                    b.Navigation("Albums");
                });

            modelBuilder.Entity("MusicPrepDemo.Models.Nummer", b =>
                {
                    b.Navigation("Lijsten");
                });
#pragma warning restore 612, 618
        }
    }
}
